public class Main {
    public static Scanner scanner = new Scanner(System.in);
    public static void main(String[] args) {
        //1부터 10까지 출력
//        for(int i =0; i<10; i++){
//            System.out.println(i+1);
//        }

//        int i=0;
//        while(i<10){
//            System.out.println(i+1);
//            i++;
//        }
//
//        for(int i=10; i>=1; i--){
//            System.out.println(i);
//        }
        //1부터 10까지 짝수만
//        for(int i=1;i<=10; i++){
//            if(i%2==0) System.out.println(i);
//        }

//        int i=1;
//        while(i<=10){
//            if(i%2==0) System.out.println(i);
//            i++;
//        }
        //1부터 20까지 홀수만 출력
//        for(int i =1; i<=20; i++){
//            if(i%2==1) System.out.println(i);
//        }

//        int i=1;
//        while(i<=20){
//            if(i%2==1) System.out.println(i);
//            i++;
//        }
        //1부터 10까지 더한 합을 출력
//        int sum = 0;
//        for(int i=1;i<=10;i++){
//            sum+=i;
//        }
//        System.out.println(sum);

//        int i=1,sum=0;
//        while(i<=10){
//            sum+= i;
//            i++;
//        }
//        System.out.println(sum);
        //a부터 z까지 반복문 사용하여 출력
//        char a='a';
//        for(a='a'; a<='z'; a++){
//            System.out.println(a);
//        }
        //정수를 입력받아 입력받은수까지 반복출력
//        int num = scanner.nextInt();
//        for(int i=0; i<num; i++){
//            System.out.println(i+1);
//        }
        //두개의 정수를 입력받아 작은수부터 큰수까지 반복문사용 출력
//        int num1 = scanner.nextInt();
//        int num2 = scanner.nextInt();
//        int min = (num1>num2)? num2 : num1;
//        int max = (num2>num1)?num2:num1;
//        for(int i = min; i<=max; i++){
//            System.out.println(i);
//        }
        //배열 선언, 고정적일때는 배열을 사용 다른때는 그렇게 자주 쓰지않음
        int []numArray = new int[5]; // java
        int nums[] = new int[5];// 자료입력도 되고 하는데 오래된 선언 c,c++,c#등에서는 이렇게 사용
         //map 검색이 좋다
         // list 검색이 좋지않다.
         // 배열 검색이 좋지않음. 삽입이 가능. 삽입 정렬이 가능

        //변수   변수명
        //자료형 타입
        //int    number;


        //배열         배열명
        //자료형 타입 [] numbers;
    }
}
